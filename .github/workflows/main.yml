name: Main

on:
  push:
    branches: [main]
  pull_request:

jobs:
  format_and_lint_client_js:
    name: Format & Lint Client JS
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Format Client JS
        run: pnpm js:format

      - name: Lint Client JS
        run: js:lint

  format_and_lint_client_rust:
    name: Format & Lint Client Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          toolchain: format, lint

      - name: Format
        run: pnpm rust:format client

      - name: Lint / Clippy
        run: pnpm zx ./scripts/helpers/rust/lint-clippy.mjs client

      - name: Lint / Docs
        run: pnpm zx ./scripts/helpers/rust/lint-docs.mjs client

      - name: Lint / Features
        run: pnpm zx ./scripts/helpers/rust/lint-features.mjs client

  format_and_lint_interface:
    name: Format & Lint Interface
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          toolchain: format, lint

      - name: Format
        run: pnpm rust:format interface

      - name: Lint / Clippy
        run: pnpm zx ./scripts/helpers/rust/lint-clippy.mjs interface

      - name: Lint / Docs
        run: pnpm zx ./scripts/helpers/rust/lint-docs.mjs interface

      - name: Lint / Features
        run: pnpm zx ./scripts/helpers/rust/lint-features.mjs interface

  wasm_interface:
    name: Build Interface in WASM
    runs-on: ubuntu-latest
    needs: format_and_lint_interface
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-wasm-interface
          solana: true

      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack

      - name: Build Interface with wasm-pack
        run: pnpm rust:wasm interface

  test_interface:
    name: Test Interface
    runs-on: ubuntu-latest
    needs: format_and_lint_interface
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          toolchain: test
          cargo-cache-key: cargo-interface
          solana: true

      - name: Test Interface
        run: pnpm rusr:test interface

  generate_clients:
    name: Check Client Generation
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          toolchain: format

      - name: Generate Clients
        run: pnpm generate:clients

      - name: Check Working Directory
        run: |
          git status --porcelain
          test -z "$(git status --porcelain)"

  test_client_js:
    name: Test Client JS
    runs-on: ubuntu-latest
    needs: format_and_lint_client_js
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          solana: true

      - name: Test Client JS
        run: pnpm js:test

  test_client_rust:
    name: Test Client Rust
    runs-on: ubuntu-latest
    needs: format_and_lint_client_rust
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-rust-client
          solana: true

      - name: Test Client Rust
        run: pnpm rust:test client
